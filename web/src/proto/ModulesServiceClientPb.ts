/**
 * @fileoverview gRPC-Web generated client stub for module
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v5.27.1
// source: modules.proto

/* eslint-disable */
// @ts-nocheck

import * as grpcWeb from 'grpc-web';

import * as google_protobuf_empty_pb from 'google-protobuf/google/protobuf/empty_pb'; // proto import: "google/protobuf/empty.proto"
import * as modules_pb from './modules_pb'; // proto import: "modules.proto"

export class ModuleServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string };
  options_: null | { [index: string]: any };

  constructor(
    hostname: string,
    credentials?: null | { [index: string]: string },
    options?: null | { [index: string]: any }
  ) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'binary';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorGetModules = new grpcWeb.MethodDescriptor(
    '/module.ModuleService/GetModules',
    grpcWeb.MethodType.UNARY,
    google_protobuf_empty_pb.Empty,
    modules_pb.GetModulesResponse,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    modules_pb.GetModulesResponse.deserializeBinary
  );

  getModules(
    request: google_protobuf_empty_pb.Empty,
    metadata?: grpcWeb.Metadata | null
  ): Promise<modules_pb.GetModulesResponse>;

  getModules(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback: (
      err: grpcWeb.RpcError,
      response: modules_pb.GetModulesResponse
    ) => void
  ): grpcWeb.ClientReadableStream<modules_pb.GetModulesResponse>;

  getModules(
    request: google_protobuf_empty_pb.Empty,
    metadata?: grpcWeb.Metadata | null,
    callback?: (
      err: grpcWeb.RpcError,
      response: modules_pb.GetModulesResponse
    ) => void
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + '/module.ModuleService/GetModules',
        request,
        metadata || {},
        this.methodDescriptorGetModules,
        callback
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + '/module.ModuleService/GetModules',
      request,
      metadata || {},
      this.methodDescriptorGetModules
    );
  }
}
